
# Authentication(احراز هویت) in Restfull:

-----------------------------

http is stateless so the state is not hold in the 
communications using http.

Ex:
we send request, then get response.
for the next request, khabari az etelaat E request E 
ghabli nsit ==> hame chi ro faramosh mikone / state ro to khodesh
negah dari nemikone.  ==> this feature makes challenges for us 
in Authentication :D 

-----------------------------

Ex:
we send login request and we get login.
we should hold the state of login in somewhere
because in the next requests i have to work as a 
logged in user so here we should have state full behaviour
-->
when i get logged in, system should remember that i haved
logged in before, for my other requests

-----------------------------

so we use session or cookie for having a state full communication

-----------------------------

each request from your browser to a server is treated as an 
independent request \:D/ The server forgets everything about 
the previous request once it sends the response

in pure HTTP, there's no built-in mechanism for the server 
to remember information about you or your actions across 
multiple requests.

It's more than just information or data. State refers to the 
context of a user's interaction with a website. 

It encompasses things like login status, preferences, session progress, 
and any other information that needs to be carried across multiple requests 
to provide a coherent user experience.


Think of it this way: State is like the memory of a website. 
Even though each request is a fresh start, the website can use 
various techniques to "remember" things about you and your interactions, 
making your experience more personalized and seamless.

-----------------------------

sometimes applications equire remembering things like:
login information, shopping cart items, or session progress. 
This is where the concept of "state management" comes in.

Cookies, Session Storage, Hidden form fields, URL parameters

-----------------------------

# stateless: 
a new customer comes to store, his identity and past purchases unknown. 
Each interaction with a salesperson or department starts fresh.


# Cookies as a customer card: 
u get a loyalty card upon entry. The store scans it at checkout, 
recognizing you as a returning customer and accessing your purchase history 
for discounts or personalized recommendations. 
This is similar to cookies remembering your preferences across visits.

-----------------------------

az cookie, session, token use mishe ta be softwaremon befahmonim
ke felan karbar ghablan login shode :D 

-----------------------------

Session storage as a shopping basket: 
While browsing, you grab items and put them in a physical basket. 
This basket exists only for your current shopping trip, similar to session storage 
temporarily holding items you add to your online cart.



Hidden form fields as notes: While filling out a purchase form, you might need to write down your chosen items and preferences on a notepad. This information acts like hidden form fields, carrying additional details alongside the submitted form data.

URL parameters as aisle markers: Imagine store aisles having unique codes on signs. Following a sign with a product code takes you directly to that item, similar to how URLs with product IDs lead to specific product pages.


Remember: These are simplified examples. Real-world stores often combine these methods and have additional ways to track customers and personalize their experience.

-----------------------------



send, only & only the data which are necessary, to the client

Both for success response and failure response

not everything you want.

-------------------  -------------------  -------------------  -------------------

API json responses, should be structured in such a way, that they are maintainable, extensible,
and repeatable throughout the project

It means that ==> only this structure should be used in the whole project

If we want to make a change, just make the change in one part
and these changes will be applied to the whole project
==>
Ex: adding a new key to json structure.

In this way, it is easier for the client to work with the responses.


# Very important:
Specify the response keys carefully
because when these keys are used in the project and when the project becomes big,
it will be difficult to make changes in these keys.


Ex: Suppose you used this code in many parts of the project

return response()->json([
     "message" => "xxxxxxx"
     "data" => "xxxxx"
]);

If one day you want to change the word data, or add a new key, or change json() to protobuf(),
we should be able to do this in a short time and make the changes from one place.
